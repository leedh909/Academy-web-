2020.4.7 [수업 9일차]



* new-->객체를 생성한다.(인스턴스화 한다.)
//클래스명 변수명 = new 클래스명(); ===> 객체생성이라고 한다.

* 클래스 만들면 필드, 생성자, getter, setter 만들라.

* 생성자도 일종의 메소드이다.
//객체를 생성할때-> 위에 있는 필드를 초기화시키는것.
//ex) public Member(){ } ====>기본생성자
//JVM이 지정해주는 초기값으로 들어가있다.(초기화)
//매개변수 있는 생성자는 JVM이 초기화 시켜주지 않는다.

******오버로딩 할때는 매개변수의 개수 또는 타입과 순서도 포함된다

*this는 현재 객체의 변수를 가르키는 것이다.(현재 필드의 변수라는것)
*this()는 기본생성자를 의미한다.
//ex) public Academy(){ this(20,"김철수");} 
===>but this()를 활용할 생성자가 만들어 있어야 한다. public Academy(int age, String nam){ ... }


*메소드(=기능)
//매개변수를 받아서 가공하고 결과값을 리턴해주는 것이다.


*****오버라이딩은 재정의라고 보면 된다. (상속받은걸 변경할수 있다.)


*매개변수를 배열로 받은 예제 (String[] args)
-> public static void main(String[] args){...}


*setter 메소드 (=받다)
//어떤 값을 전달받아서 필드값을 변경해줌.

*getter 메소드 (=주다)
//필드에 기록된 값을 요청한 쪽에 보내줌.

*return
//메소드에는 반드시 return이 존재한다.(생략되어 있는 경우도 있다.)
//Stack의 자료구조 LIFO 형태로 메소드가 실행된다.
// main(String[] args){ method1(){ method2(){...}... }... }
순서->(main method실행->method1실행->method2실행->method2종료->method1종료->main method종료)





진행 : 전시간복습, 메소드, 연습


------------------------------------------------------------------------------------


진행 : 객체배열, 실습문제(객체, 객체배열)




*객체배열 
//2차원배열과 비슷하다.
//클래스명[] 변수명 = new 클래스명[];
//선언한 클래스의 객체만 생성이 가능하다.

*선언
//클래스명[] 배열명;
//클래스명 배열명[];

*할당
배열명 = new 클래스명[배열크기];

*선언과 동시에 할당
//클래스명[] 변수명 = new 클래스명[];

*초기화
//클래스명 배열명[] = {new 클래스명(),new 클래스명()};
//각 방안에 선언된 클래스의 타입만으로 값을 넣을 수 있다.




