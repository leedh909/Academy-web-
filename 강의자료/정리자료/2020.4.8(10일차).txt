2020.4.8 [수업 10일차]



*객체 실습문제 3번(Circle)
문제에서 "밑줄"있는건 static 형식이라는 것이다.

*nonstatic은 객체를 생성 후 메모리 영역에 할당받고 사용할 수 있다.

*static 사용 예제 => 싱글톤

*싱글톤(singleton) ? ==>하나의 객체 이용!!
//싱글톤은 단 하나의 객체만을 생성해서 사용하는 디자인 패턴
//기본생성자를 private 만든것은 아무나 객체선언을 하지 못하게 막는것이다.
//if문으로 작성해서 하나의 객체만 사용하게 만든다.
//ex)
	public static Singleton getInstance() {
		if(one==null) {
			one = new Singleton();
		}
		return one; 
	}

//하나의 통로만 만들어서 공유한다.
//ex) DB랑 연결해서 하나의 통로로 공유한다.


*상속(extends)
//public class Academy extends Company{ ... }
//다른 클래스가 가지고 있는 멤버들을 내것처럼 사용하겠다.
//재사용!, 공통부분 관리(추가,변경) 용이!
//공통된 부분을 하나로 만들어서 코드의 양을 줄일 수 있다.
//private멤버는 상속이 안되기 때문에 부모쪽에 넘겨서 처리한다.

//오버라이딩-->재정의
//ex) Object클래스의 equals()를 String클래스의 equals()로 상속받아서 String의 맛대로 재정의한 것.
 
//우리가 만든 모든 클래스는 Object클래스 영향을 받는다.

//자바에서는 단일상속만 지원!!!!!!!


*super()
//부모클래스의 생성자.
//부모 생성자를 가장 먼저 실행되어야한다. (반드시 첫줄)
//super(매개변수, ...) 가능

*super.
//부모클래스의 변수를 의미.

*오버라이딩
//부모걸 물려받아서 재정의하는것.
//메소드 헤드라인 위에 반드시 @Override 표시 
//메소드 이름 동일, 매개변수의 개수, 타입 동일, 리턴 타입 동일해야 오버라이딩 가능.



*상속이 불가능한 클래스 ->상수(final)로 선언할시
// public final class FinalClass { }

*상속시 오버라이딩이 불가능한 메소드 ->상수(final)로 선언할시
//public final void method(){ }






진행 :객체실습문제3, 싱글톤(*좀더알아보기),상속, 연습


------------------------------------------------------------------------------------

ObjectArray파일 복사해가기 ->Person 

진행 : 상속연습, 


*오버라이딩 할 때(=재정의 할 때) 헤드라인에 @Override 를 반드시 붙여줘야한다.


// 처리 방식을 이해하기 전에는 쓰지마라.......
********기본 생성자 단축키( Ctrl + space )
********생성자 단축키 (Shift + Alt + S, O)
********getter & setter 단축키 ( Shift + Alt + S, R)











