2020.4.9 [수업 11일차]



* toString() 메소드
//객체 변수명을 출력시 toString()이 실행된다.
//정의(=오버라이딩)를 안해주면 Object의 toString()메소드를 실행.
//ex)Car c1 = new Car();
//ex)System.out.println(c1);  ==> toString()메소드에서 정의한대로 출력이 된다.


*다형성
//ex) Car c2 = new SUV("검정");
//부모 클래스 안에 자식의 객체가 들어간다.
//부모 필드를 내것처럼 편하게 쓰고 있는 것이다.
//동적 바인딩(=동적으로 제본된다.)--> 내부적으로는 안에 들어있는 객체가 실행된다.(사실상 SUV객체 안의 메소드가 실행된다.)
//바인딩(=제본)







진행 : 전날 복습(상속), 연습



------------------------------------------------------------------------------------



진행 : 연습풀이, 실습, 다형성



*Object클래스의 equals(), hashCode() 오버라이딩  ->  (Java12_Inherit 안에 Book패키지 확인!)
//1. toString 오버라이딩
//클래스의 풀 패키지 명과 객체의 해쉬코드를 16진수로 변환하여 리턴하는 메소드

//2. equals 오버라이딩 (**동등성 여부**)
//(원래)두 객체의 주소값을 비교하여 같으면 true, 다르면 false를 리턴.
//(변경)객체가 가진 값까지 비교 하기 위한 목적으로 오버라이딩, **동등성 확보**.
//주소가 같으면 같은 객체
//전달받은 객체가 null인 경우 무조건 다른 객체
//전달받은 객체를 형변환하여 각 필드별로 비교 시작
//ex) Book other = (Book)obj; //강제 형변환
//기본 자료형의 경우 값만 일치하는지 비교
//ex) price !=other.price

//3. hashCode 오버라이딩 (**동일성 확보**)
//ex) return (author+price+title).hashCode();
//같은 값이 있으면 같은 hashcode를 리턴한다.


// 처리 방식을 이해하기 전에는 쓰지마라.......
**********toString 오버라이딩 단축키  	(Shift + Alt + S, S)
**********equals 오버라이딩 단축키	(Shift + Alt + S, H)
**********hashCode 오버라이딩 단축키	(Shift + Alt + S, H)


*Math.round(실수)
//long이라는 정수타입이라서 반올림을 하면 소수점이 없어짐으로
//입력값에*10을 곱하고 결과값에 나누기 10.0을 해주면 소수점 첫째자리까지 반올림된다.
















