2020.6.11 [수업 53일차]


*document : 우리가 작성한 문서를 말한다.

***변수의 사용
*변수의 선언 규칙
1. 대소문자 구분한다.
2. 영문,$,_ 로 시작해야 한다.
3. 영문,$,_,숫자를 포함할 수 있다.
4. 키워드나 예약어를 사용할 수 있다.

*변수의 범위
1. 전역변수 : window객체에 포함되는 변수로 다른 함수들에서 공용으로 사용할 수 있다.
2. 지역변수 : 함수나 객체 내부에 선언되고 실행이 종료되면 사라짐

*변수의 선언과 저장
1. var 키워드를 사용하여 변수 선언
2. 변수의 타입은 저장되는 타입에 따라 결정된다.
       function test03(){
            //문자
            var variable3 = "문자";
            alert(variable3+" : "+ typeof variable3);
            //숫자
            variable3 = 5;
            alert(variable3+" : "+ typeof variable3);
            //논리
            variable3 = true;
            alert(variable3+" : "+ typeof variable3);
            //객체
            variable3=[1,2,3,4,5,6];
            alert(variable3+" : "+ typeof variable3);
            //함수
            variable3= function(){
                alert("타입타입");
            }
            alert(variable3+" : "+ typeof variable3);
            variable3(); //변수안에 있는 함수 실행방법.

        }


**window 객체에서 제공하는 대화형 함수
//종류에는 alert(), confirm(), prompt()가 있다.

*alert : 단순 경고나 코드 디버깅용으로 주로 사용
//alert("내용 출력");
*confirm : 확인/취소 버튼 제공(true/false 반환)
            if(confirm("배경색을 분홍색으로 바꿀까요?")){
                document.body.style.backgroundColor="pink";
            }else{
                alert("기본색상 유지");
            }

*prompt : 텍스트박스, 확인/취소 버튼. 반환값은 텍스트(취소:null)
// var txt = prompt("좋아하는 과목 번호를 선택\n[1:java 2:db 3:ui]")
//그후 switch(txt) { case : }문을 써서 경우에 대한 출력값을 만든다.

*console.log(txt);  //디버깅할때 console창에서 확인가능




진행 : 자바스크립트 변수, 대화형 변수

------------------------------------------------------------------------------------

진행 : 자바스크립트 함수, document설명&활용



****함수의 종료
1.명시적함수
        function func01(){
            alert("명시적 함수");
        }
2.익명함수
        var func02=function(){
            alert("익명 함수")
        }
3.리터럴함수
        function func03(){
            literalPrn(function(msg){
                alert(msg);
            });
        }
        function literalPrn(literal){
            literal("안녕하세요 리터럴입니다.");
        }

*arguments 속성
//<h2 class="select" onclick="valTest('k','h','정보','교육원');">arguments 속성</h2>
//함수에 입력된 값을 배열형태로 받아온다. 아규먼트의 갯수만큼 배열형태로
            var value="";
            for(var i=0; i<arguments.length;i++){
                value += arguments[i];
            }

*클로저(함수 리턴)
//<input type="button" value="클릭" onclick="pmEdu(pm.value);">
//함수안의 함수 , 함수를 리턴받을 수 있다.
        function closuerTest(val){
            var msg = "입니당!";
            function addVal(){
                alert(val+" "+msg);
            }
            return addVal;
        }
//방법1
//closuerTest(val)(); 
//closuerTest(val)은 리턴되는게 함수라서 실행시켜주려면 ()를 붙여주면된다.
            
//방법2
//var tmp = closureTest(val);
//tmp();


*원래 있던 이미지값을 변경하는 방법
// document.getElementById("gallery").src="image/flower"+num+".PNG";

*<a>태그의 링크를 열지않고 끝내는 방법.
//<a onclick="return prevGallery();" href="https://www.naver.com">이전</a>
//함수안에 return false;를 입력하고 그 함수를 리턴불러온다.

***DOM(Document Object Model) 탐색 메소드
//Document는 브라우저 생성시 url 밑 부분(화면이 보이는곳)을 의미한다.
1.엘리먼트의 id로 탐색: 엘리먼트 하나를 선택(중복불가)-반환:값하나
        function searchId(){
            var doc = document.getElementById("test");
            doc.innerHTML="id로 탐색합니다.";
            doc.style.color="red";
        }
2.엘리먼트의 name으로 탐색: 엘리먼트 여러개 선택-반환:배열(nodeList)
        function searchName(){
            var doc = document.getElementsByName("test02");
            doc[1].value="name속성으로 엘리먼트 탐색";
        }
3.엘리먼트의 태그이름으로 탐색: 엘리먼트 여러개 선택-반환:배열
        function searchTagName(){
            var doc = document.getElementsByTagName("p");
            doc[4].innerHTML="<b>tagName으로 탐색</b>";
            doc[4].style.color="blue";
        }

