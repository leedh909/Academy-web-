2020.7.3 [수업 69일차]



* 서블릿(servlet) 은 컨트롤러 역할을 한다.
//컨트롤러가 jsp 에서 서블릿이 된다.


*라이프사이클
init() : 실행될때 해당 값 사용 가능
service() : 서버가 실행되는 동안 지원해주는 메소드들
destroy() : 해당 서버를 닫아주면 발생한다.

* 서블릿은 최초 요청이 들어올때 초기화
// 숫자가 0보다 크면 서버가 시작 되면서 서블릿이 초기화

* <load-on-startup>1</load-on-startup>
// 서블릿이 여러개 일때 실행 순서를 정의한다.

*서블릿을 사용하려면 HttpServlet 을 상속 받으면 된다.
//클래스의 요청을 받아서 응답해주는 걸 서블릿class라고 한다. => controller 기능.
//서블릿은 자바코드이기때문에 수정시 서버를 다시 시작해야한다.

jsp = html 안에 자바코드
서블릿 = 자바코드 안에 html

*servlet 파일생성하려면 new->servlet

*프로젝트 우클릭 -> java EE Tools -> Generate Deployment Descriptor Stub
//WEB-INF 안에 web.xml 파일이 생성된다. 



진행 :  insertuser, servlet
----------------------------------------------------------------------------------------------------

진행 : servlet doGet, doPost , Scope 종류별 공유범위



*요청을 받는 메소드1 = doGet방식
*요청을 받는 메소드2 = doPost방식


* param-name , param-value
//param-value에 있는 값을 param-name으로 애플리케이션 전체의 전역 파라미터 설정

*init-param 
// init() 메소드가 실행될때 해당 값 사용 가능

*.do 의 의미??? 별의미없다./ 써도되고 안써도 되고./ 하자라는 의미정도이다.
//ex) /HelloServlet.do


*java파일에서 html 입력
// PrintWriter out = response.getWriter();
// out.print(" html 형식들(=태그들) " );

* <servlet-mapping> /HelloServlet.do 로 들어오는 걸 HelloServlet이 처리하겠다.
* HelloServlet은 com.hello.controller.HelloController의 별칭이다.

**xml이 아닌 서블릿(=컨트롤러)과 바로 맵핑하는 방식
// <a href="ScopeController">이동(controller)</a>
// 서블릿의 이름을 가져다 쓴다.

*Scope 공유 범위 
//서블릿에서 session 불러오기
//pageContext : 한페이지
//request : 한페이지+@
//session : 브라우저 단위
//application : 애플리케이션 단위

*request 객체 가져오는 방법 
//RequestDispatcher

서블릿은 크게 라이프사이클과 스레드를 관리한다.


