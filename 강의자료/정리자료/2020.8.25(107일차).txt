2020.8.25 [수업 107일차]


*autowire = "?"
1)byName : id/name 이 setter와 같은 이름의 bean이 있으면 자동 할당
2)constructor : 생성자의 parameter(=매개변수)와 같은 type의 bean이 있으면 자동할당, id나 name으로 호출
//constructor를 사용할때 하나만 정의되어있으면 괜찮지만 두개가 정의되어있는데 하나가 부정확하면 기본생성자로 호출한다.
3)byType : setter의 parameter와 같은 type의 bean이 있으면 자동 할당


*어노테이션 사용하기
//사용하려면 Namespaces에서 context를 체크해야한다.

*component-scan
//class안에 모든 @Component 를 스캔해서 읽어온다.
//사용방법은 읽어올 객체(=class) 위에 @Component를 쓰고 import 해주면 된다.
//@Autowired와 @Qualifier 뿐만 아니라 @Service, @Component, @Controller, @Repository 등 모든 클래스를 스캔하고 bean을 작성한다.

*<context:annotation-config/>
//어딘가에 bean을 등록해놓으면 @Autowired와 @Qualifier Annotation을 해석해서 가져다 쓰겠다는 의미이다.
//@Autowired와 @Qualifier 두 가지만 해결한다.

*@Autowired
//필드에서 객체를 읽어올때 Spring이 자동적으로 비교하고 할당받아온다.
//@Autowired 와 @Qualifier 는 같이 쓰일때가 많다.
//@Qualifier("xml에서 받아오고자하는 객체 선택")


진행 : autowire, 어노테이션(annotation)
----------------------------------------------------------------------------------------------------
진행 : 어노테이션(annotation)


*Namespaces-context 
<context:component-scan base-package="com.test03" />
//스캔할 패키지 설정.

*@Component("samsung")
//main에서 getBean으로 값을 불러올때 값을 지정할 수 있다.


*Spring Annotation
-어노테이션은 자바 1.5부터 지원합니다.
-스프링은 어노테이션을 이용하여 빈과 관련된 정보를 설정할 수 있다.


Spring web mvc framework - annotation의 사용을 통해 설정 파일을 간결화 할 수 있다.

-4개의 stereotype annotation(component-scan에 의해서 자동으로 등록)
@Component: stereotype annotation의 조상 
@Controller: Spring MVC에서 컨트롤러로 인식
@Service: 역할 부여 없이 스캔대상이 된다. 비즈니스클래스(biz)에 사용
@Repository: 일반적으로 dao에 사용


1. @Component
클래스에 선언, 해당 클래스를 자동으로 bean으로 등록
bean의 이름은 해당 클래스명(첫글자 소문자)
범위는 디폴트로 singleton

2. @Autowired
Spring에서 의존관계를 자동으로 설정할때 사용된다.
생성자, 필드, 메서드 세곳에 적용 가능,
타입을 이용한 프로퍼티 자동 설정기능 제공, 해당 타입의 빈이 없거나 2개 이상일 경우 예외 발생
같은 타입의 빈이 2개 이상 존재할 때 예외가 발생하는데, @Qualifier를 사용하면 동일한 타입의 빈 중 특정 빈을 사용하도록 해서 문제를 해결 가능.
ex) @Autowired
     @Qualifier("test")
     private Test test; //->> byType -> byName
	
3. @Qualifier
@Autowired 에서 2개 이상의 동일타입 빈 객체가 존재하면 특정 빈을 사용하도록 선언.

4. @Required
필수 프로퍼티임을 명시. 프로퍼티 설정 메소드(setter)에 붙이면 된다.
필수 프로퍼티를 설정하지 않을 경우 빈 생성시 예외 발생

5. @Repository
dao에 사용

6. @Service
비즈니스 로직(biz)로 등록

7. @Resource
애플리케이션에서 필요로 하는 리소스를 자동 연결 시 사용
name 속성에 자동으로 연결될 빈 객체의 이름을 입력
@Resource(name="testDao") //byName -> byType

