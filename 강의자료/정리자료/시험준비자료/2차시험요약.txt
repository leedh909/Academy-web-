*String 클래스 -> 불변
*StringBuffer 클래스 -> 가변, 
*StringBuilder 클래스 -> 가변, 쓰레드 safe기능을 제공하지 않음

Date 클래스 보다는 Calendar / GregorianCaendar 클래스 사용 권장
Calendar클래스는 생성자가 protected -> new연산자로 객체생성 불가능 getInstance() 메소드로 객체생성
GregorianCalendar 클래스는 년,월,일,시,분,초 정보를 필드를 이용하여 다룰수 있음

SimpleDateFormat ft = new SimpleDateFormat("yyyy-MM-dd");
String ftToday = ft.format(today);
---------------------------------------------------------------------------------------------
오류의 종류 = (컴파일, 런타임, 시스템) 에러
(문법상에러, 계산식오류, 컴퓨터 오작동으로 인한 에러(해결불가))

Unchecked Exception은 프로그래머가 코드 수정으로 해결 가능
checked Exception은 시스템 에러이므로 반드시 예외처리를 해주어야한다.

throws는 자신을 호출한 메소드에게 처리방법을 위임하는 것이다.
try~catch문을 이용해서 예외처리
try~with~resource finally에서 작성했던 close처리를 자동처리할 수 있다.
사용자 정의 예외 -> throw new 예외클래스명("내용");
-----------------------------------------------------------------------------------------------
InputStream -> 바이트 기반 입력스트림
OutputStream -> 바이트 기반 출력스트림
Reader->문자 기반 입력스트림
Writer->문자 기반 출력스트림
flush() -> 버터에 잔류하는 모든 데이터를 출력하는 메소드

객체 입출력 보조스트림-> 직렬화(Serialization) 역직렬화(Deserialization)
implements java.io.Serializable
serialVersionUID필드 
-------------------------------------------------------------------------------------------------
배열vs컬렉션 차이 
List(ArrayList,Vector,LinkedList), Set(HashSet,TreeSet,LinkedHashSet), Map(HashMap, TreeMap, LinkedHashMap, Properties)

Comparable / Comparator
compareTo()/ compare()
기본 기준(하나) / 기본을 제외한 다른 기준(여러개)
둘다 implements로 상속 받는다.

TreeSet과 TreeMap은 저장과 동시에 자동 오름차순 정렬
----------------------------------------------------------------------------------------------------
프로세스란? 실행중인 프로그램을 의미한다.
스레드란? 작업을 수행하는 작업단위를 의미한다.

멀티스레드 장점? 단점?
//자원을 효율적으로 사용, 작업 응답성향상, 코드 간결, CPU사용률 향상
//동기화 주의, 교착상(데드락)이 발생하지 않도록 주의, 고려할 사항 많음.

extends Thread{ ... }
implements Runnable{ ... }
스레드 스케쥴링 방식 ( 우선순위방식, 순환할당방식)
스레드생성 -> 실행대기 -> 실행 -> 일시정지 -> 실행대기 -> 실행 -> 스레드 소멸

동기화(Synchronized) => 한번에 한개의 스레드만 프로세스 공유 자원에 접근할 수 있도록 락을 걸어 다른 스레드가 간섭하지 못하도록 하는 것.
-----------------------------------------------------------------------------------------------------------
네트워크=>여러대의 컴퓨터가 통신회선을 연결한 것.
IP주소=>네트워크 상에서 컴퓨터를 식별하는 번호
포트=>프로그램을 식별하는 번호
TCP 전송속도는 느리지만 정확 및 안정적 (연결 지향적 프로토콜)
UDP 전송속도는 빠르지만 신뢰성없음 (비연결 지향적 프로토콜)

InetAddress 클래스는 IP주소를 표현하는 class
//ex) InetAddress addr = InetAddress.getLocalHost();





